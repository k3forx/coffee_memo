// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldFlags holds the string denoting the flags field in the database.
	FieldFlags = "flags"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeUsersCoffeeBeans holds the string denoting the users_coffee_beans edge name in mutations.
	EdgeUsersCoffeeBeans = "users_coffee_beans"
	// Table holds the table name of the user in the database.
	Table = "users"
	// UsersCoffeeBeansTable is the table that holds the users_coffee_beans relation/edge.
	UsersCoffeeBeansTable = "users_coffee_beans"
	// UsersCoffeeBeansInverseTable is the table name for the UsersCoffeeBean entity.
	// It exists in this package in order to avoid circular dependency with the "userscoffeebean" package.
	UsersCoffeeBeansInverseTable = "users_coffee_beans"
	// UsersCoffeeBeansColumn is the table column denoting the users_coffee_beans relation/edge.
	UsersCoffeeBeansColumn = "user_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldEmail,
	FieldPassword,
	FieldFlags,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
