// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoffeeBeansColumns holds the columns for the "coffee_beans" table.
	CoffeeBeansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "farm_name", Type: field.TypeString, Nullable: true},
		{Name: "country", Type: field.TypeString, Nullable: true},
		{Name: "shop_id", Type: field.TypeInt32},
		{Name: "roast_degree", Type: field.TypeString},
		{Name: "roasted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CoffeeBeansTable holds the schema information for the "coffee_beans" table.
	CoffeeBeansTable = &schema.Table{
		Name:       "coffee_beans",
		Columns:    CoffeeBeansColumns,
		PrimaryKey: []*schema.Column{CoffeeBeansColumns[0]},
	}
	// CoffeeShopsColumns holds the columns for the "coffee_shops" table.
	CoffeeShopsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "shop_url", Type: field.TypeString, Nullable: true},
		{Name: "open_time", Type: field.TypeTime, Nullable: true},
		{Name: "close_time", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "closed_at", Type: field.TypeTime, Nullable: true},
	}
	// CoffeeShopsTable holds the schema information for the "coffee_shops" table.
	CoffeeShopsTable = &schema.Table{
		Name:       "coffee_shops",
		Columns:    CoffeeShopsColumns,
		PrimaryKey: []*schema.Column{CoffeeShopsColumns[0]},
	}
	// DripRecipesColumns holds the columns for the "drip_recipes" table.
	DripRecipesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "user_id", Type: field.TypeInt32},
		{Name: "coffee_bean_id", Type: field.TypeInt32},
		{Name: "coffee_bean_weight", Type: field.TypeFloat64},
		{Name: "liquid_weight", Type: field.TypeFloat64},
		{Name: "temperature", Type: field.TypeFloat64},
		{Name: "steam_time", Type: field.TypeInt32},
		{Name: "drip_time", Type: field.TypeInt32},
		{Name: "memo", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// DripRecipesTable holds the schema information for the "drip_recipes" table.
	DripRecipesTable = &schema.Table{
		Name:       "drip_recipes",
		Columns:    DripRecipesColumns,
		PrimaryKey: []*schema.Column{DripRecipesColumns[0]},
	}
	// GooseDbVersionColumns holds the columns for the "goose_db_version" table.
	GooseDbVersionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "version_id", Type: field.TypeInt},
		{Name: "is_applied", Type: field.TypeBool},
		{Name: "tstamp", Type: field.TypeTime, Nullable: true},
	}
	// GooseDbVersionTable holds the schema information for the "goose_db_version" table.
	GooseDbVersionTable = &schema.Table{
		Name:       "goose_db_version",
		Columns:    GooseDbVersionColumns,
		PrimaryKey: []*schema.Column{GooseDbVersionColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "flags", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UsersCoffeeBeansColumns holds the columns for the "users_coffee_beans" table.
	UsersCoffeeBeansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "coffee_bean_id", Type: field.TypeInt32, Nullable: true},
		{Name: "user_id", Type: field.TypeInt32, Nullable: true},
	}
	// UsersCoffeeBeansTable holds the schema information for the "users_coffee_beans" table.
	UsersCoffeeBeansTable = &schema.Table{
		Name:       "users_coffee_beans",
		Columns:    UsersCoffeeBeansColumns,
		PrimaryKey: []*schema.Column{UsersCoffeeBeansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_coffee_beans_coffee_beans_users_coffee_beans",
				Columns:    []*schema.Column{UsersCoffeeBeansColumns[4]},
				RefColumns: []*schema.Column{CoffeeBeansColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_coffee_beans_users_users_coffee_beans",
				Columns:    []*schema.Column{UsersCoffeeBeansColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoffeeBeansTable,
		CoffeeShopsTable,
		DripRecipesTable,
		GooseDbVersionTable,
		UsersTable,
		UsersCoffeeBeansTable,
	}
)

func init() {
	GooseDbVersionTable.Annotation = &entsql.Annotation{
		Table: "goose_db_version",
	}
	UsersCoffeeBeansTable.ForeignKeys[0].RefTable = CoffeeBeansTable
	UsersCoffeeBeansTable.ForeignKeys[1].RefTable = UsersTable
}
