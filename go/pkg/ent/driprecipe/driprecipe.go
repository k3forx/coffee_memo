// Code generated by entc, DO NOT EDIT.

package driprecipe

const (
	// Label holds the string label denoting the driprecipe type in the database.
	Label = "drip_recipe"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldCoffeeBeanID holds the string denoting the coffee_bean_id field in the database.
	FieldCoffeeBeanID = "coffee_bean_id"
	// FieldCoffeeBeanWeight holds the string denoting the coffee_bean_weight field in the database.
	FieldCoffeeBeanWeight = "coffee_bean_weight"
	// FieldLiquidWeight holds the string denoting the liquid_weight field in the database.
	FieldLiquidWeight = "liquid_weight"
	// FieldTemperature holds the string denoting the temperature field in the database.
	FieldTemperature = "temperature"
	// FieldSteamTime holds the string denoting the steam_time field in the database.
	FieldSteamTime = "steam_time"
	// FieldDripTime holds the string denoting the drip_time field in the database.
	FieldDripTime = "drip_time"
	// FieldMemo holds the string denoting the memo field in the database.
	FieldMemo = "memo"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the driprecipe in the database.
	Table = "drip_recipes"
)

// Columns holds all SQL columns for driprecipe fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldCoffeeBeanID,
	FieldCoffeeBeanWeight,
	FieldLiquidWeight,
	FieldTemperature,
	FieldSteamTime,
	FieldDripTime,
	FieldMemo,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
