// Code generated by entc, DO NOT EDIT.

package userbrewrecipe

const (
	// Label holds the string label denoting the userbrewrecipe type in the database.
	Label = "user_brew_recipe"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldUserCoffeeBeanID holds the string denoting the user_coffee_bean_id field in the database.
	FieldUserCoffeeBeanID = "user_coffee_bean_id"
	// FieldCoffeeBeanWeight holds the string denoting the coffee_bean_weight field in the database.
	FieldCoffeeBeanWeight = "coffee_bean_weight"
	// FieldCoffeeBeanGrind holds the string denoting the coffee_bean_grind field in the database.
	FieldCoffeeBeanGrind = "coffee_bean_grind"
	// FieldLiquidWeight holds the string denoting the liquid_weight field in the database.
	FieldLiquidWeight = "liquid_weight"
	// FieldTemperature holds the string denoting the temperature field in the database.
	FieldTemperature = "temperature"
	// FieldStepOne holds the string denoting the step_one field in the database.
	FieldStepOne = "step_one"
	// FieldStepTwo holds the string denoting the step_two field in the database.
	FieldStepTwo = "step_two"
	// FieldStepThree holds the string denoting the step_three field in the database.
	FieldStepThree = "step_three"
	// FieldStepFour holds the string denoting the step_four field in the database.
	FieldStepFour = "step_four"
	// FieldStepFive holds the string denoting the step_five field in the database.
	FieldStepFive = "step_five"
	// FieldMemo holds the string denoting the memo field in the database.
	FieldMemo = "memo"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeUserCoffeeBean holds the string denoting the user_coffee_bean edge name in mutations.
	EdgeUserCoffeeBean = "user_coffee_bean"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the userbrewrecipe in the database.
	Table = "user_brew_recipes"
	// UserCoffeeBeanTable is the table that holds the user_coffee_bean relation/edge.
	UserCoffeeBeanTable = "user_brew_recipes"
	// UserCoffeeBeanInverseTable is the table name for the UserCoffeeBean entity.
	// It exists in this package in order to avoid circular dependency with the "usercoffeebean" package.
	UserCoffeeBeanInverseTable = "user_coffee_beans"
	// UserCoffeeBeanColumn is the table column denoting the user_coffee_bean relation/edge.
	UserCoffeeBeanColumn = "user_coffee_bean_id"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "user_brew_recipes"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
)

// Columns holds all SQL columns for userbrewrecipe fields.
var Columns = []string{
	FieldID,
	FieldStatus,
	FieldUserID,
	FieldUserCoffeeBeanID,
	FieldCoffeeBeanWeight,
	FieldCoffeeBeanGrind,
	FieldLiquidWeight,
	FieldTemperature,
	FieldStepOne,
	FieldStepTwo,
	FieldStepThree,
	FieldStepFour,
	FieldStepFive,
	FieldMemo,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
