// Code generated by entc, DO NOT EDIT.

package userscoffeebean

const (
	// Label holds the string label denoting the userscoffeebean type in the database.
	Label = "users_coffee_bean"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldCoffeeBeanID holds the string denoting the coffee_bean_id field in the database.
	FieldCoffeeBeanID = "coffee_bean_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeCoffeeBean holds the string denoting the coffee_bean edge name in mutations.
	EdgeCoffeeBean = "coffee_bean"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the userscoffeebean in the database.
	Table = "users_coffee_beans"
	// CoffeeBeanTable is the table that holds the coffee_bean relation/edge.
	CoffeeBeanTable = "users_coffee_beans"
	// CoffeeBeanInverseTable is the table name for the CoffeeBean entity.
	// It exists in this package in order to avoid circular dependency with the "coffeebean" package.
	CoffeeBeanInverseTable = "coffee_beans"
	// CoffeeBeanColumn is the table column denoting the coffee_bean relation/edge.
	CoffeeBeanColumn = "coffee_bean_id"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "users_coffee_beans"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
)

// Columns holds all SQL columns for userscoffeebean fields.
var Columns = []string{
	FieldID,
	FieldStatus,
	FieldUserID,
	FieldCoffeeBeanID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
